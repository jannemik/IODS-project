theme(legend.position = c(0, 1), legend.justification = c(0, 1), legend.direction='vertical') +
guides(col = guide_legend(reverse = TRUE, title = NULL)) + xlab(NULL) +
scale_x_discrete(position = "top") + scale_color_manual(values=myColors)
data <- read.csv2("~/Documents/data.csv")
library(ggplot2)
data$condition <- factor(data$condition,levels=c('Injury', 'Externalizing', 'Internalizing', 'Mental', 'Somatic', 'Any'))
data$model <- factor(data$model,levels=c('M6', 'M5', 'M4', 'M3', 'M2', 'M1'),
labels = c("M6: M2 within siblings", "M5: crude within siblings", "M4: M3 (siblings only)", "M3: M2 + observed background", "M2: birth year, month & order", "M1: crude"))
data$sex <- factor(data$sex,levels=c('Girls', 'Boys'))
myColors <- c("orange", "blue", "gold", "black", "gray", "red")
labels <- c(Girls = "Girls (n=58,824/21,600)", Boys = "Boys (n=60,719/22,810)")
#Tytöt ja pojat vierekkäin
ggplot(data, aes(y=b, x=condition, colour=model)) +
geom_point(position=position_dodge(width=0.7), size=1.5) +
geom_errorbar(aes(ymin=lower, ymax=upper, width = 0.5), position = position_dodge(0.7)) +
theme_bw(base_size=16) + theme(panel.grid.major.y = element_blank(), legend.text=element_text(size=11), legend.background = element_rect(fill="white", linetype = "solid", colour = "black"), plot.caption=element_text(hjust = 0, face = "italic")) +
coord_flip() + facet_grid(. ~ sex, labeller=labeller(sex = labels)) + geom_hline(yintercept = 0, linetype = "dashed")  +
theme(legend.position = c(0, 1), legend.justification = c(0, 1), legend.direction='vertical') +
guides(col = guide_legend(reverse = TRUE, title = NULL)) + xlab(NULL) +
scale_x_discrete(position = "top") + scale_color_manual(values=myColors)
data <- read.csv2("~/Documents/data.csv")
library(ggplot2)
data$condition <- factor(data$condition,levels=c('Injury', 'Externalizing', 'Internalizing', 'Mental', 'Somatic', 'Any'))
data$model <- factor(data$model,levels=c('M6', 'M5', 'M4', 'M3', 'M2', 'M1'),
labels = c("M6: M2 within siblings", "M5: crude within siblings", "M4: M3 (siblings only)", "M3: M2 + observed background", "M2: birth year, month & order", "M1: crude"))
data$sex <- factor(data$sex,levels=c('Girls', 'Boys'))
myColors <- c("dodgerblue4", "dodgerblue3", "darkgoldenrod", "cadetblue4", "cadetblue3", "cadetblue2")
labels <- c(Girls = "Girls (n=58,824/21,600)", Boys = "Boys (n=60,719/22,810)")
#Tytöt ja pojat vierekkäin
ggplot(data, aes(y=b, x=condition, colour=model)) +
geom_point(position=position_dodge(width=0.7), size=1.5) +
geom_errorbar(aes(ymin=lower, ymax=upper, width = 0.5), position = position_dodge(0.7)) +
theme_bw(base_size=16) + theme(panel.grid.major.y = element_blank(), legend.text=element_text(size=11), legend.background = element_rect(fill="white", linetype = "solid", colour = "black"), plot.caption=element_text(hjust = 0, face = "italic")) +
coord_flip() + facet_grid(. ~ sex, labeller=labeller(sex = labels)) + geom_hline(yintercept = 0, linetype = "dashed")  +
theme(legend.position = c(0, 1), legend.justification = c(0, 1), legend.direction='vertical') +
guides(col = guide_legend(reverse = TRUE, title = NULL)) + xlab(NULL) +
scale_x_discrete(position = "top") + scale_color_manual(values=myColors)
data <- read.csv2("~/Documents/data.csv")
library(ggplot2)
data$condition <- factor(data$condition,levels=c('Injury', 'Externalizing', 'Internalizing', 'Mental', 'Somatic', 'Any'))
data$model <- factor(data$model,levels=c('M6', 'M5', 'M4', 'M3', 'M2', 'M1'),
labels = c("M6: M2 within siblings", "M5: crude within siblings", "M4: M3 (siblings only)", "M3: M2 + observed background", "M2: birth year, month & order", "M1: crude"))
data$sex <- factor(data$sex,levels=c('Girls', 'Boys'))
myColors <- c("cadetblue4", "cadetblue3", "darkgoldenrod", "khaki4", "khaki3", "khaki1")
labels <- c(Girls = "Girls (n=58,824/21,600)", Boys = "Boys (n=60,719/22,810)")
#Tytöt ja pojat vierekkäin
ggplot(data, aes(y=b, x=condition, colour=model)) +
geom_point(position=position_dodge(width=0.7), size=1.5) +
geom_errorbar(aes(ymin=lower, ymax=upper, width = 0.5), position = position_dodge(0.7)) +
theme_bw(base_size=16) + theme(panel.grid.major.y = element_blank(), legend.text=element_text(size=11), legend.background = element_rect(fill="white", linetype = "solid", colour = "black"), plot.caption=element_text(hjust = 0, face = "italic")) +
coord_flip() + facet_grid(. ~ sex, labeller=labeller(sex = labels)) + geom_hline(yintercept = 0, linetype = "dashed")  +
theme(legend.position = c(0, 1), legend.justification = c(0, 1), legend.direction='vertical') +
guides(col = guide_legend(reverse = TRUE, title = NULL)) + xlab(NULL) +
scale_x_discrete(position = "top") + scale_color_manual(values=myColors)
data <- read.csv2("~/Documents/data.csv")
library(ggplot2)
data$condition <- factor(data$condition,levels=c('Injury', 'Externalizing', 'Internalizing', 'Mental', 'Somatic', 'Any'))
data$model <- factor(data$model,levels=c('M6', 'M5', 'M4', 'M3', 'M2', 'M1'),
labels = c("M6: M2 within siblings", "M5: crude within siblings", "M4: M3 (siblings only)", "M3: M2 + observed background", "M2: birth year, month & order", "M1: crude"))
data$sex <- factor(data$sex,levels=c('Girls', 'Boys'))
myColors <- c("indianred4", "indianred1", "mediumseagreen", "slategray3", "slategray2", "slategray1")
labels <- c(Girls = "Girls (n=58,824/21,600)", Boys = "Boys (n=60,719/22,810)")
#Tytöt ja pojat vierekkäin
ggplot(data, aes(y=b, x=condition, colour=model)) +
geom_point(position=position_dodge(width=0.7), size=1.5) +
geom_errorbar(aes(ymin=lower, ymax=upper, width = 0.5), position = position_dodge(0.7)) +
theme_bw(base_size=16) + theme(panel.grid.major.y = element_blank(), legend.text=element_text(size=11), legend.background = element_rect(fill="white", linetype = "solid", colour = "black"), plot.caption=element_text(hjust = 0, face = "italic")) +
coord_flip() + facet_grid(. ~ sex, labeller=labeller(sex = labels)) + geom_hline(yintercept = 0, linetype = "dashed")  +
theme(legend.position = c(0, 1), legend.justification = c(0, 1), legend.direction='vertical') +
guides(col = guide_legend(reverse = TRUE, title = NULL)) + xlab(NULL) +
scale_x_discrete(position = "top") + scale_color_manual(values=myColors)
data <- read.csv2("~/Documents/data.csv")
library(ggplot2)
data$condition <- factor(data$condition,levels=c('Injury', 'Externalizing', 'Internalizing', 'Mental', 'Somatic', 'Any'))
data$model <- factor(data$model,levels=c('M6', 'M5', 'M4', 'M3', 'M2', 'M1'),
labels = c("M6: M2 within siblings", "M5: crude within siblings", "M4: M3 (siblings only)", "M3: M2 + observed background", "M2: birth year, month & order", "M1: crude"))
data$sex <- factor(data$sex,levels=c('Girls', 'Boys'))
myColors <- c("tomato4", "tomato1", "mediumseagreen", "slategray3", "slategray2", "slategray1")
labels <- c(Girls = "Girls (n=58,824/21,600)", Boys = "Boys (n=60,719/22,810)")
#Tytöt ja pojat vierekkäin
ggplot(data, aes(y=b, x=condition, colour=model)) +
geom_point(position=position_dodge(width=0.7), size=1.5) +
geom_errorbar(aes(ymin=lower, ymax=upper, width = 0.5), position = position_dodge(0.7)) +
theme_bw(base_size=16) + theme(panel.grid.major.y = element_blank(), legend.text=element_text(size=11), legend.background = element_rect(fill="white", linetype = "solid", colour = "black"), plot.caption=element_text(hjust = 0, face = "italic")) +
coord_flip() + facet_grid(. ~ sex, labeller=labeller(sex = labels)) + geom_hline(yintercept = 0, linetype = "dashed")  +
theme(legend.position = c(0, 1), legend.justification = c(0, 1), legend.direction='vertical') +
guides(col = guide_legend(reverse = TRUE, title = NULL)) + xlab(NULL) +
scale_x_discrete(position = "top") + scale_color_manual(values=myColors)
data <- read.csv2("~/Documents/data.csv")
library(ggplot2)
data$condition <- factor(data$condition,levels=c('Injury', 'Externalizing', 'Internalizing', 'Mental', 'Somatic', 'Any'))
data$model <- factor(data$model,levels=c('M6', 'M5', 'M4', 'M3', 'M2', 'M1'),
labels = c("M6: M2 within siblings", "M5: crude within siblings", "M4: M3 (siblings only)", "M3: M2 + observed background", "M2: birth year, month & order", "M1: crude"))
data$sex <- factor(data$sex,levels=c('Girls', 'Boys'))
myColors <- c("tomato4", "tomato1", "springgreen4", "slategray3", "slategray2", "slategray1")
labels <- c(Girls = "Girls (n=58,824/21,600)", Boys = "Boys (n=60,719/22,810)")
#Tytöt ja pojat vierekkäin
ggplot(data, aes(y=b, x=condition, colour=model)) +
geom_point(position=position_dodge(width=0.7), size=1.5) +
geom_errorbar(aes(ymin=lower, ymax=upper, width = 0.5), position = position_dodge(0.7)) +
theme_bw(base_size=16) + theme(panel.grid.major.y = element_blank(), legend.text=element_text(size=11), legend.background = element_rect(fill="white", linetype = "solid", colour = "black"), plot.caption=element_text(hjust = 0, face = "italic")) +
coord_flip() + facet_grid(. ~ sex, labeller=labeller(sex = labels)) + geom_hline(yintercept = 0, linetype = "dashed")  +
theme(legend.position = c(0, 1), legend.justification = c(0, 1), legend.direction='vertical') +
guides(col = guide_legend(reverse = TRUE, title = NULL)) + xlab(NULL) +
scale_x_discrete(position = "top") + scale_color_manual(values=myColors)
data <- read.csv2("~/Documents/data.csv")
library(ggplot2)
data$condition <- factor(data$condition,levels=c('Injury', 'Externalizing', 'Internalizing', 'Mental', 'Somatic', 'Any'))
data$model <- factor(data$model,levels=c('M6', 'M5', 'M4', 'M3', 'M2', 'M1'),
labels = c("M6: M2 within siblings", "M5: crude within siblings", "M4: M3 (siblings only)", "M3: M2 + observed background", "M2: birth year, month & order", "M1: crude"))
data$sex <- factor(data$sex,levels=c('Girls', 'Boys'))
myColors <- c("springgreen4", "springgreen2", "steelblue4", "darkgoldernrod4", "darkgoldenrod3", "darkgoldenrod1")
labels <- c(Girls = "Girls (n=58,824/21,600)", Boys = "Boys (n=60,719/22,810)")
#Tytöt ja pojat vierekkäin
ggplot(data, aes(y=b, x=condition, colour=model)) +
geom_point(position=position_dodge(width=0.7), size=1.5) +
geom_errorbar(aes(ymin=lower, ymax=upper, width = 0.5), position = position_dodge(0.7)) +
theme_bw(base_size=16) + theme(panel.grid.major.y = element_blank(), legend.text=element_text(size=11), legend.background = element_rect(fill="white", linetype = "solid", colour = "black"), plot.caption=element_text(hjust = 0, face = "italic")) +
coord_flip() + facet_grid(. ~ sex, labeller=labeller(sex = labels)) + geom_hline(yintercept = 0, linetype = "dashed")  +
theme(legend.position = c(0, 1), legend.justification = c(0, 1), legend.direction='vertical') +
guides(col = guide_legend(reverse = TRUE, title = NULL)) + xlab(NULL) +
scale_x_discrete(position = "top") + scale_color_manual(values=myColors)
data <- read.csv2("~/Documents/data.csv")
library(ggplot2)
data$condition <- factor(data$condition,levels=c('Injury', 'Externalizing', 'Internalizing', 'Mental', 'Somatic', 'Any'))
data$model <- factor(data$model,levels=c('M6', 'M5', 'M4', 'M3', 'M2', 'M1'),
labels = c("M6: M2 within siblings", "M5: crude within siblings", "M4: M3 (siblings only)", "M3: M2 + observed background", "M2: birth year, month & order", "M1: crude"))
data$sex <- factor(data$sex,levels=c('Girls', 'Boys'))
myColors <- c("springgreen4", "springgreen2", "steelblue4", "darkgoldenrod4", "darkgoldenrod3", "darkgoldenrod1")
labels <- c(Girls = "Girls (n=58,824/21,600)", Boys = "Boys (n=60,719/22,810)")
#Tytöt ja pojat vierekkäin
ggplot(data, aes(y=b, x=condition, colour=model)) +
geom_point(position=position_dodge(width=0.7), size=1.5) +
geom_errorbar(aes(ymin=lower, ymax=upper, width = 0.5), position = position_dodge(0.7)) +
theme_bw(base_size=16) + theme(panel.grid.major.y = element_blank(), legend.text=element_text(size=11), legend.background = element_rect(fill="white", linetype = "solid", colour = "black"), plot.caption=element_text(hjust = 0, face = "italic")) +
coord_flip() + facet_grid(. ~ sex, labeller=labeller(sex = labels)) + geom_hline(yintercept = 0, linetype = "dashed")  +
theme(legend.position = c(0, 1), legend.justification = c(0, 1), legend.direction='vertical') +
guides(col = guide_legend(reverse = TRUE, title = NULL)) + xlab(NULL) +
scale_x_discrete(position = "top") + scale_color_manual(values=myColors)
data <- read.csv2("~/Documents/data.csv")
library(ggplot2)
data$condition <- factor(data$condition,levels=c('Injury', 'Externalizing', 'Internalizing', 'Mental', 'Somatic', 'Any'))
data$model <- factor(data$model,levels=c('M6', 'M5', 'M4', 'M3', 'M2', 'M1'),
labels = c("M6: M2 within siblings", "M5: crude within siblings", "M4: M3 (siblings only)", "M3: M2 + observed background", "M2: birth year, month & order", "M1: crude"))
data$sex <- factor(data$sex,levels=c('Girls', 'Boys'))
myColors <- c("springgreen4", "springgreen2", "steelblue4", "darkgoldenrod4", "darkgoldenrod3", "darkgoldenrod1")
labels <- c(Girls = "Girls (n=58,824/21,600)", Boys = "Boys (n=60,719/22,810)")
#Tytöt ja pojat vierekkäin
ggplot(data, aes(y=b, x=condition, colour=model)) +
geom_point(position=position_dodge(width=0.7), size=1.6) +
geom_errorbar(aes(ymin=lower, ymax=upper, width = 0.5), position = position_dodge(0.7)) +
theme_bw(base_size=16) + theme(panel.grid.major.y = element_blank(), legend.text=element_text(size=11), legend.background = element_rect(fill="white", linetype = "solid", colour = "black"), plot.caption=element_text(hjust = 0, face = "italic")) +
coord_flip() + facet_grid(. ~ sex, labeller=labeller(sex = labels)) + geom_hline(yintercept = 0, linetype = "dashed")  +
theme(legend.position = c(0, 1), legend.justification = c(0, 1), legend.direction='vertical') +
guides(col = guide_legend(reverse = TRUE, title = NULL)) + xlab(NULL) +
scale_x_discrete(position = "top") + scale_color_manual(values=myColors)
data <- read.csv2("~/Documents/data.csv")
library(ggplot2)
data$condition <- factor(data$condition,levels=c('Injury', 'Externalizing', 'Internalizing', 'Mental', 'Somatic', 'Any'))
data$model <- factor(data$model,levels=c('M6', 'M5', 'M4', 'M3', 'M2', 'M1'),
labels = c("M6: M2 within siblings", "M5: crude within siblings", "M4: M3 (siblings only)", "M3: M2 + observed background", "M2: birth year, month & order", "M1: crude"))
data$sex <- factor(data$sex,levels=c('Girls', 'Boys'))
myColors <- c("springgreen4", "springgreen2", "steelblue4", "darkgoldenrod4", "darkgoldenrod3", "darkgoldenrod1")
labels <- c(Girls = "Girls (n=58,824/21,600)", Boys = "Boys (n=60,719/22,810)")
#Tytöt ja pojat vierekkäin
ggplot(data, aes(y=b, x=condition, colour=model)) +
geom_point(position=position_dodge(width=0.7), size=1.7) +
geom_errorbar(aes(ymin=lower, ymax=upper, width = 0.6), position = position_dodge(0.7)) +
theme_bw(base_size=16) + theme(panel.grid.major.y = element_blank(), legend.text=element_text(size=11), legend.background = element_rect(fill="white", linetype = "solid", colour = "black"), plot.caption=element_text(hjust = 0, face = "italic")) +
coord_flip() + facet_grid(. ~ sex, labeller=labeller(sex = labels)) + geom_hline(yintercept = 0, linetype = "dashed")  +
theme(legend.position = c(0, 1), legend.justification = c(0, 1), legend.direction='vertical') +
guides(col = guide_legend(reverse = TRUE, title = NULL)) + xlab(NULL) +
scale_x_discrete(position = "top") + scale_color_manual(values=myColors)
data <- read.csv2("~/Documents/data.csv")
library(ggplot2)
data$condition <- factor(data$condition,levels=c('Injury', 'Externalizing', 'Internalizing', 'Mental', 'Somatic', 'Any'))
data$model <- factor(data$model,levels=c('M6', 'M5', 'M4', 'M3', 'M2', 'M1'),
labels = c("M6: M2 within siblings", "M5: crude within siblings", "M4: M3 (siblings only)", "M3: M2 + observed background", "M2: birth year, month & order", "M1: crude"))
data$sex <- factor(data$sex,levels=c('Girls', 'Boys'))
myColors <- c("cadetblue4", "cadetblue3", "steelblue4", "darkgoldenrod4", "darkgoldenrod3", "darkgoldenrod1")
labels <- c(Girls = "Girls (n=58,824/21,600)", Boys = "Boys (n=60,719/22,810)")
#Tytöt ja pojat vierekkäin
ggplot(data, aes(y=b, x=condition, colour=model)) +
geom_point(position=position_dodge(width=0.7), size=1.7) +
geom_errorbar(aes(ymin=lower, ymax=upper, width = 0.6), position = position_dodge(0.7)) +
theme_bw(base_size=16) + theme(panel.grid.major.y = element_blank(), legend.text=element_text(size=11), legend.background = element_rect(fill="white", linetype = "solid", colour = "black"), plot.caption=element_text(hjust = 0, face = "italic")) +
coord_flip() + facet_grid(. ~ sex, labeller=labeller(sex = labels)) + geom_hline(yintercept = 0, linetype = "dashed")  +
theme(legend.position = c(0, 1), legend.justification = c(0, 1), legend.direction='vertical') +
guides(col = guide_legend(reverse = TRUE, title = NULL)) + xlab(NULL) +
scale_x_discrete(position = "top") + scale_color_manual(values=myColors)
data <- read.csv2("~/Documents/data.csv")
library(ggplot2)
data$condition <- factor(data$condition,levels=c('Injury', 'Externalizing', 'Internalizing', 'Mental', 'Somatic', 'Any'))
data$model <- factor(data$model,levels=c('M6', 'M5', 'M4', 'M3', 'M2', 'M1'),
labels = c("M6: M2 within siblings", "M5: crude within siblings", "M4: M3 (siblings only)", "M3: M2 + observed background", "M2: birth year, month & order", "M1: crude"))
data$sex <- factor(data$sex,levels=c('Girls', 'Boys'))
myColors <- c("darkseagreen4", "darkseagreen3", "steelblue4", "darkgoldenrod4", "darkgoldenrod3", "darkgoldenrod1")
labels <- c(Girls = "Girls (n=58,824/21,600)", Boys = "Boys (n=60,719/22,810)")
#Tytöt ja pojat vierekkäin
ggplot(data, aes(y=b, x=condition, colour=model)) +
geom_point(position=position_dodge(width=0.7), size=1.7) +
geom_errorbar(aes(ymin=lower, ymax=upper, width = 0.6), position = position_dodge(0.7)) +
theme_bw(base_size=16) + theme(panel.grid.major.y = element_blank(), legend.text=element_text(size=11), legend.background = element_rect(fill="white", linetype = "solid", colour = "black"), plot.caption=element_text(hjust = 0, face = "italic")) +
coord_flip() + facet_grid(. ~ sex, labeller=labeller(sex = labels)) + geom_hline(yintercept = 0, linetype = "dashed")  +
theme(legend.position = c(0, 1), legend.justification = c(0, 1), legend.direction='vertical') +
guides(col = guide_legend(reverse = TRUE, title = NULL)) + xlab(NULL) +
scale_x_discrete(position = "top") + scale_color_manual(values=myColors)
data <- read.csv2("~/Documents/data.csv")
library(ggplot2)
data$condition <- factor(data$condition,levels=c('Injury', 'Externalizing', 'Internalizing', 'Mental', 'Somatic', 'Any'))
data$model <- factor(data$model,levels=c('M6', 'M5', 'M4', 'M3', 'M2', 'M1'),
labels = c("M6: M2 within siblings", "M5: crude within siblings", "M4: M3 (siblings only)", "M3: M2 + observed background", "M2: birth year, month & order", "M1: crude"))
data$sex <- factor(data$sex,levels=c('Girls', 'Boys'))
myColors <- c("darkseagreen4", "darkseagreen3", "steelblue4", "darkgoldenrod4", "darkgoldenrod3", "darkgoldenrod1")
labels <- c(Girls = "Girls (n=58,824/21,600)", Boys = "Boys (n=60,719/22,810)")
#Tytöt ja pojat vierekkäin
ggplot(data, aes(y=b, x=condition, colour=model)) +
geom_point(position=position_dodge(width=0.8), size=1.8) +
geom_errorbar(aes(ymin=lower, ymax=upper, width = 0.7), position = position_dodge(0.8)) +
theme_bw(base_size=16) + theme(panel.grid.major.y = element_blank(), legend.text=element_text(size=11), legend.background = element_rect(fill="white", linetype = "solid", colour = "black"), plot.caption=element_text(hjust = 0, face = "italic")) +
coord_flip() + facet_grid(. ~ sex, labeller=labeller(sex = labels)) + geom_hline(yintercept = 0, linetype = "dashed")  +
theme(legend.position = c(0, 1), legend.justification = c(0, 1), legend.direction='vertical') +
guides(col = guide_legend(reverse = TRUE, title = NULL)) + xlab(NULL) +
scale_x_discrete(position = "top") + scale_color_manual(values=myColors)
data <- read.csv2("~/Documents/data.csv")
library(ggplot2)
data$condition <- factor(data$condition,levels=c('Injury', 'Externalizing', 'Internalizing', 'Mental', 'Somatic', 'Any'))
data$model <- factor(data$model,levels=c('M6', 'M5', 'M4', 'M3', 'M2', 'M1'),
labels = c("M6: M2 within siblings", "M5: crude within siblings", "M4: M3 (siblings only)", "M3: M2 + observed background", "M2: birth year, month & order", "M1: crude"))
data$sex <- factor(data$sex,levels=c('Girls', 'Boys'))
myColors <- c("darkseagreen4", "darkseagreen3", "navy", "darkgoldenrod4", "darkgoldenrod3", "darkgoldenrod1")
labels <- c(Girls = "Girls (n=58,824/21,600)", Boys = "Boys (n=60,719/22,810)")
#Tytöt ja pojat vierekkäin
ggplot(data, aes(y=b, x=condition, colour=model)) +
geom_point(position=position_dodge(width=0.8), size=1.8) +
geom_errorbar(aes(ymin=lower, ymax=upper, width = 0.7), position = position_dodge(0.8)) +
theme_bw(base_size=16) + theme(panel.grid.major.y = element_blank(), legend.text=element_text(size=11), legend.background = element_rect(fill="white", linetype = "solid", colour = "black"), plot.caption=element_text(hjust = 0, face = "italic")) +
coord_flip() + facet_grid(. ~ sex, labeller=labeller(sex = labels)) + geom_hline(yintercept = 0, linetype = "dashed")  +
theme(legend.position = c(0, 1), legend.justification = c(0, 1), legend.direction='vertical') +
guides(col = guide_legend(reverse = TRUE, title = NULL)) + xlab(NULL) +
scale_x_discrete(position = "top") + scale_color_manual(values=myColors)
lrn14 <- read.table(
"http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt",
sep="\t",
header=TRUE
)
str(lrn14)
head(lrn14)
dim(lrn14)
# Access the dplyr library
library(dplyr)
# questions related to deep, surface and strategic learning
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
# select the columns related to deep learning and create column 'deep' by averaging
deep_columns <- select(lrn14, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)
# select the columns related to surface learning and create column 'surf' by averaging
surface_columns <- select(lrn14, one_of(surface_questions))
lrn14$surf <- rowMeans(surface_columns)
# select the columns related to strategic learning and create column 'stra' by averaging
strategic_columns <- select(lrn14, one_of(strategic_questions))
lrn14$strategic <- rowMeans(surface_columns)
install.packages("dplyr")
# Access the dplyr library
library(dplyr)
# questions related to deep, surface and strategic learning
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
# select the columns related to deep learning and create column 'deep' by averaging
deep_columns <- select(lrn14, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)
# select the columns related to surface learning and create column 'surf' by averaging
surface_columns <- select(lrn14, one_of(surface_questions))
lrn14$surf <- rowMeans(surface_columns)
# select the columns related to strategic learning and create column 'stra' by averaging
strategic_columns <- select(lrn14, one_of(strategic_questions))
lrn14$strategic <- rowMeans(surface_columns)
View(lrn14)
str(lrn14)
View(lrn14)
lrn14$attitude <- lrn14$Attitude / 10
# choose a handful of columns to keep
keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "Points")
# select the 'keep_columns' to create a new dataset
learning2014 <- select(lrn14, one_of(keep_columns))
#Janne Mikkonen
#14.11.2017
#Exercie 2: Create learning data
#READ DATA
lrn14 <- read.table(
"http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt",
sep="\t",
header=TRUE
)
str(lrn14)
dim(lrn14)
#There are 60 variables and 183 observations.
#Most variables are measured on a scale from 1 to 5.
#There is only one factor variable, gender, which takes the values 1 (F) and 2 (M)
#CREATE COMBINED VARIABLES
# Access the dplyr library
library(dplyr)
# questions related to deep, surface and strategic learning
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
# select the columns related to deep learning and create column 'deep' by averaging
deep_columns <- select(lrn14, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)
# select the columns related to surface learning and create column 'surf' by averaging
surface_columns <- select(lrn14, one_of(surface_questions))
lrn14$surf <- rowMeans(surface_columns)
# select the columns related to strategic learning and create column 'stra' by averaging
strategic_columns <- select(lrn14, one_of(strategic_questions))
lrn14$stra <- rowMeans(strategic_columns)
#RESCALE ATTITUDE
lrn14$attitude <- lrn14$Attitude / 10
#CREATE A NEW DATA SET
# choose a handful of columns to keep
keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "Points")
# select the 'keep_columns' to create a new dataset
learning2014 <- select(lrn14, one_of(keep_columns))
colnames(learning2014)
colnames(learning2014)[2] <- "age"
colnames(learning2014)[7] <- "age"
colnames(learning2014)[7] <- "points"
colnames(learning2014)
colnames(learning2014)
learning2014 <- filter(learning2014, points > 0)
setwd("~/Documents/GitHub/IODS-project")
?write.csv
write.csv(learning2014)
setwd("~/Documents/GitHub/IODS-project")
write.csv(learning2014, file = "learning2014.csv", row.names = FALSE)
learning2014 <- read.csv(learning2014.csv)
#Janne Mikkonen
#14.11.2017
#Exercie 2: Create learning data
#READ DATA
lrn14 <- read.table(
"http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt",
sep="\t",
header=TRUE
)
str(lrn14)
dim(lrn14)
#There are 60 variables and 183 observations.
#Most variables are measured on a scale from 1 to 5.
#There is only one factor variable, gender, which takes the values 1 (F) and 2 (M)
#CREATE COMBINED VARIABLES
# Access the dplyr library
library(dplyr)
# questions related to deep, surface and strategic learning
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
# select the columns related to deep learning and create column 'deep' by averaging
deep_columns <- select(lrn14, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)
# select the columns related to surface learning and create column 'surf' by averaging
surface_columns <- select(lrn14, one_of(surface_questions))
lrn14$surf <- rowMeans(surface_columns)
# select the columns related to strategic learning and create column 'stra' by averaging
strategic_columns <- select(lrn14, one_of(strategic_questions))
lrn14$stra <- rowMeans(strategic_columns)
#RESCALE ATTITUDE
lrn14$attitude <- lrn14$Attitude / 10
#CREATE A NEW DATA SET
# choose a handful of columns to keep
keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "Points")
# select the 'keep_columns' to create a new dataset
learning2014 <- select(lrn14, one_of(keep_columns))
#RENAME COLUMNS AND EXCLUDE PERSONS WITH ZERO POINTS
colnames(learning2014)
colnames(learning2014)[2] <- "age"
colnames(learning2014)[7] <- "points"
colnames(learning2014)
learning2014 <- filter(learning2014, points > 0)
setwd("~/Documents/GitHub/IODS-project")
write.csv(learning2014, file = "learning2014.csv", row.names = FALSE)
learning2014 <- read.csv(learning2014.csv)
learning2014 <- read.csv(file = "learning2014.csv")
#Janne Mikkonen
#14.11.2017
#Exercie 2: Create learning data
#READ DATA
lrn14 <- read.table(
"http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt",
sep="\t",
header=TRUE
)
str(lrn14)
dim(lrn14)
#There are 60 variables and 183 observations.
#Most variables are measured on a scale from 1 to 5.
#There is only one factor variable, gender, which takes the values 1 (F) and 2 (M)
#CREATE COMBINED VARIABLES
# Access the dplyr library
library(dplyr)
# questions related to deep, surface and strategic learning
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
# select the columns related to deep learning and create column 'deep' by averaging
deep_columns <- select(lrn14, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)
# select the columns related to surface learning and create column 'surf' by averaging
surface_columns <- select(lrn14, one_of(surface_questions))
lrn14$surf <- rowMeans(surface_columns)
# select the columns related to strategic learning and create column 'stra' by averaging
strategic_columns <- select(lrn14, one_of(strategic_questions))
lrn14$stra <- rowMeans(strategic_columns)
#RESCALE ATTITUDE
lrn14$attitude <- lrn14$Attitude / 10
#CREATE A NEW DATA SET
# choose a handful of columns to keep
keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "Points")
# select the 'keep_columns' to create a new dataset
learning2014 <- select(lrn14, one_of(keep_columns))
#RENAME COLUMNS AND EXCLUDE PERSONS WITH ZERO POINTS
colnames(learning2014)
colnames(learning2014)[2] <- "age"
colnames(learning2014)[7] <- "points"
colnames(learning2014)
learning2014 <- filter(learning2014, points > 0)
#SAVE THE DATA
setwd("~/Documents/GitHub/IODS-project")
write.csv(learning2014, file = "learning2014.csv", row.names = FALSE)
learning2014 <- read.csv(file = "learning2014.csv")
View(learning2014)
View(learning2014)
```{r}
setwd("~/Documents/GitHub/IODS-project/data")
learning2014 <- read.csv(file = "learning2014.csv")
learning2014 <- read.csv(file = "learning2014.csv")
setwd("~/Documents/GitHub/IODS-project/data")
learning2014 <- read.csv(file = "learning2014.csv")
setwd("~/Documents/GitHub/IODS-project/data")
learning2014 <- read.csv(file = "learning2014.csv")
str(learning2014)
setwd("~/Documents/GitHub/IODS-project/data")
learning2014 <- read.csv(file = "learning2014.csv")
dim(learning2014)
str(learning2014)
setwd("~/Documents/GitHub/IODS-project/data")
learning2014 <- read.csv(file = "learning2014.csv")
dim(learning2014)
str(learning2014)
setwd("~/Documents/GitHub/IODS-project/data")
learning2014 <- read.csv(file = "learning2014.csv")
setwd("~/Documents/GitHub/IODS-project/data")
learning2014 <- read.csv(file = "learning2014.csv")
library(ggplot2)
p1 <- ggplot(learning2014, aes(x = attitude, y = points, col = gender))
p2 <- p1 + geom_point()
p2
library(ggplot2)
p1 <- ggplot(learning2014, aes(x = attitude, y = points, col = gender))
p2 <- p1 + geom_point()
p3 <- p2 + geom_smooth(method = "lm")
p4 <- p3 + ggtitle("Student's attitude versus exam points by gender")
library(ggplot2)
p1 <- ggplot(learning2014, aes(x = attitude, y = points, col = gender))
p2 <- p1 + geom_point()
p3 <- p2 + geom_smooth(method = "lm")
p4 <- p3 + ggtitle("Student's attitude versus exam points by gender")
library(ggplot2)
p1 <- ggplot(learning2014, aes(x = attitude, y = points, col = gender))
p2 <- p1 + geom_point()
p3 <- p2 + geom_smooth(method = "lm")
p4 <- p3 + ggtitle("Student's attitude versus exam points by gender")
p4
library(GGally)
install.packages("GGally")
library(GGally)
library(ggplot2)
p <- ggpairs(learning2014, mapping = aes(alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
model <- lm(points ~ attitude + stra + deep, data = learning2014)
model1 <- lm(points ~ attitude + stra + surf, data = learning2014)
summary(model1)
model1 <- lm(points ~ attitude + stra + surf + gender, data = learning2014)
summary(model1)
model1 <- lm(points ~ attitude + stra + surf, data = learning2014)
summary(model1)
model2 <- lm(points ~ attitude, data = learning2014)
summary(model2)
model2 <- lm(points ~ attitude, data = learning2014)
summary(model2)
model2 <- lm(points ~ attitude + stra, data = learning2014)
summary(model2)
model2 <- lm(points ~ attitude + deep, data = learning2014)
summary(model2)
model2 <- lm(points ~ attitude + surf, data = learning2014)
summary(model2)
model2 <- lm(points ~ attitude + gender, data = learning2014)
summary(model2)
model2 <- lm(points ~ attitude + surf, data = learning2014)
summary(model2)
model2 <- lm(points ~ attitude + stra, data = learning2014)
summary(model2)
model1 <- lm(points ~ attitude + stra + deep, data = learning2014)
summary(model1)
model2 <- lm(points ~ attitude, data = learning2014)
summary(model2)
par(mfrow = c(2,2))
plot(model2, which = c(1, 2, 5))
par(mfrow = c(2,2))
plot(model2, which = c(1, 2, 5))
